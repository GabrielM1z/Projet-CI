#!/usr/bin/env node

const debug = require('debug')('node-js-sample:server');
const http = require('http');
const app = require('../app'); // On importe l'application express définie dans app.js

// Normalisation du port
const port = normalizePort(process.env.PORT || '8080');

// Création du serveur HTTP avec l'application Express
const server = http.createServer(app);

// Écoute du serveur sur le port spécifié
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

// Fonction pour normaliser le port
function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

// Écouteur d'erreur
function onError(error) {
  if (error.syscall !== 'listen') throw error;

  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Écouteur d'événement pour "listening"
function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
